@using Microsoft.AspNetCore.Identity
@using LionSkyNot.Infrastructure

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ITrainerService TrainerService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

        var userId = ClaimsPrincipalExtensions.GetId(this.User);
        var userIsTrainer = TrainerService.IsTrainer(userId);

        @if (!User.IsInRole("Administrator") && !User.IsInRole("Moderator"))
        {
            @if (!userIsTrainer)
            {
                <li class="nav-item">
                    <a class="nav-link text-white" asp-area="" asp-controller="Trainer" asp-action="BecomeTrainer">Become Trainer</a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link text-white" asp-area="" asp-controller="Trainer" asp-action="TrainerClasses">Training classes</a>
                </li>
            }
        }

        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
